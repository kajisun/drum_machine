{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["PadSrc","keyCode","keyTrigger","id","url","this","bankOne","bankTwo","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","App","props","state","power","display","String","fromCharCode","currentPadBank","currentPadBankId","sliderVal","displayClipName","bind","selectBank","adjustVolume","powerControl","clearDisplay","setState","name","e","target","value","Math","round","setTimeout","powerSlider","float","bankSlider","document","getElementsByClassName","forEach","sound","volume","className","updateDisplay","clipVolume","icon","faFreeCodeCamp","onClick","style","type","min","max","step","onChange","React","Component","PadBank","padBank","map","drumObj","i","padBankArr","clipId","clip","DrumPad","padStyle","playSound","handleKeyPress","activatedPad","addEventListener","removeEventListener","getElementById","currentTime","play","replace","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.745d784e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFreeCodeCamp } from \"@fortawesome/free-brands-svg-icons\";\n\nclass PadSrc {\n    constructor(keyCode, keyTrigger, id, url) {\n        this.keyCode = keyCode;\n        this.keyTrigger = keyTrigger;\n        this.id = id;\n        this.url = url;\n    }\n}\n\nconst bankOne = [\n    new PadSrc(81, \"Q\", \"Heater-1\",\n        'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'),\n    new PadSrc(87, \"W\", \"Heater-2\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'),\n    new PadSrc(69, \"E\", \"Heater-3\",\n        'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'),\n    new PadSrc(65, \"A\", \"Heater-4\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'),\n    new PadSrc(83, \"S\", \"Clap\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'),\n    new PadSrc(68, \"D\", \"Open-HH\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'),\n    new PadSrc(90, \"Z\", \"Kick-n'-Hat\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'),\n    new PadSrc(88, \"X\", \"Kick\", \n        'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'),\n    new PadSrc(67, \"C\", \"Close-HH\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'),\n]\n\nconst bankTwo = [\n    new PadSrc(81, \"Q\", \"Chord-1\",\n        'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'),\n    new PadSrc(87, \"W\", \"Chord-2\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'),\n    new PadSrc(69, \"E\", \"Chord-3\",\n        'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'),\n    new PadSrc(65, \"A\", \"Shaker\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'),\n    new PadSrc(83, \"S\", \"Open-HH\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'),\n    new PadSrc(68, \"D\", \"Open-HH\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'),\n    new PadSrc(90, \"Z\", \"Punchy-Kick\", \n        'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'),\n    new PadSrc(88, \"X\", \"Side-Stick\", \n        'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'),\n    new PadSrc(67, \"C\", \"Snare\", \n        'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'),\n]\n\nconst activeStyle = {\n    backgroundColor: \"orange\",\n    boxShadow: \"0 3px orange\",\n    height: 77,\n    marginTop: 13,\n}\n\nconst inactiveStyle = {\n    backgroundColor: \"gray\",\n    marginTop: 10,\n    boxShadow: \"3px 3px 5px black\",\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            power: true,\n            display: String.fromCharCode(160),\n            currentPadBank: bankOne,\n            currentPadBankId: \"Heater Kit\",\n            sliderVal: 0.3,\n        };\n        this.displayClipName = this.displayClipName.bind(this);\n        this.selectBank = this.selectBank.bind(this);\n        this.adjustVolume = this.adjustVolume.bind(this);\n        this.powerControl = this.powerControl.bind(this);\n        this.clearDisplay = this.clearDisplay.bind(this);\n    }\n\n    powerControl() {\n        this.setState({\n            power: !this.state.power,\n            display: String.fromCharCode(160),\n        });\n    }\n\n    selectBank() {\n        if (this.state.power) {\n            this.state.currentPadBankId === \"Heater Kit\" ?\n                this.setState({\n                    currentPadBank: bankTwo,\n                    display: \"Smooth Piano Kit\",\n                    currentPadBankId: \"Smooth Piano Kit\",\n                }) :\n                this.setState({\n                    currentPadBank: bankOne,\n                    display: \"Heater Kit\",\n                    currentPadBankId: \"Heater Kit\",\n                });\n        }\n    }\n\n    displayClipName(name) {\n        if (this.state.power) {\n            this.setState({\n                display: name,\n            });\n        }\n    }\n\n    adjustVolume(e) {\n        if (this.state.power) {\n            this.setState({\n                sliderVal: e.target.value,\n                display: \"Volume: \" + Math.round(e.target.value * 100),\n            });\n            setTimeout(() => this.clearDisplay(), 1000);\n        }\n    }\n\n    clearDisplay() {\n        this.setState({\n            display: String.fromCharCode(160),\n        });\n    }\n\n    render() {  \n        const powerSlider = this.state.power ? {\n            float: \"right\",\n        } : {\n            float: \"left\",\n        };\n\n        const bankSlider = this.state.currentPadBank === bankOne ? {\n            float: \"left\",\n        } : {\n            float: \"right\",\n        };\n        {\n            const clips = [...document.getElementsByClassName(\"clip\")];\n            clips.forEach(sound => sound.volume = this.state.sliderVal);\n        }\n\n        return (\n            <div id=\"drum-machine\" className=\"inner-container\">\n                <PadBank\n                    power={this.state.power}\n                    updateDisplay={this.displayClipName}\n                    clipVolume={this.state.sliderVal}\n                    currentPadBank={this.state.currentPadBank} />\n\n                <div className=\"logo\">\n                    <div className=\"inner-logo\">{\"FCC\" + String.fromCharCode(160)}</div>\n                        <FontAwesomeIcon icon={faFreeCodeCamp} className=\"faFreeCodeCamp\" />\n                </div>\n\n                <div className=\"controls-container\">\n                    \n                    <div className=\"control\">\n                        <p>Power</p>\n                        <div onClick={this.powerControl} className=\"select\">\n                            <div style={powerSlider} className=\"inner\" />    \n                        </div>\n                    </div>\n                    <p id=\"display\">\n                        {this.state.display}\n                    </p>\n                    <div className=\"volume-slider\">\n                        <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={this.state.sliderVal} onChange={this.adjustVolume} />\n                    </div> \n                    <div className=\"control\">\n                        <p>Bank</p>\n                        <div onClick={this.selectBank} className=\"select\">\n                            <div style={bankSlider} className=\"inner\" />\n                        </div>        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass PadBank extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        let padBank;\n        this.props.power ?\n            padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n                return (\n                    <DrumPad \n                        clipId={padBankArr[i].id}\n                        clip={padBankArr[i].url}\n                        keyTrigger={padBankArr[i].keyTrigger}\n                        keyCode={padBankArr[i].keyCode}\n                        updateDisplay={this.props.updateDisplay}\n                        power={this.props.power}\n                    />\n                )\n            }) :\n            padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n                return (\n                    <DrumPad \n                        clipId={padBankArr[i].id}\n                        clip=\"#\"\n                        keyTrigger={padBankArr[i].keyTrigger}\n                        keyCode={padBankArr[i].keyCode}\n                        updateDisplay={this.props.updateDisplay}\n                        power={this.props.power}\n                    />\n                )\n            });\n        return (\n            <div className=\"pad-bank\">\n                {padBank}\n            </div>\n        )\n    }\n}\n\nclass DrumPad extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            padStyle: inactiveStyle\n        }\n        this.playSound = this.playSound.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.activatedPad = this.activatedPad.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleKeyPress);\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.handleKeyPress);\n    }\n    handleKeyPress(e) {\n        if (e.keyCode === this.props.keyCode) {\n            this.playSound();\n        }\n    }\n    activatedPad() {\n        if (this.props.power) {\n            this.state.padStyle.backgroundColor === \"orange\" ?\n                this.setState({\n                    padStyle: inactiveStyle\n                }) :\n                this.setState({\n                    padStyle: activeStyle\n                });\n        } else {\n            this.state.padStyle.marginTop === 13 ?\n                this.setState({\n                    padStyle: inactiveStyle\n                }) :\n                this.setState({\n                    padStyle: {\n                        height: 77,\n                        marginTop: 13,\n                        backgroundColor: \"gray\",\n                        boxShadow: \"0 3px grey\"\n                    }\n                });\n        }\n    }\n    playSound(e) {\n        const sound = document.getElementById(this.props.keyTrigger);\n        sound.currentTime = 0;\n        sound.play();\n        this.activatedPad();\n        setTimeout(() => this.activatedPad(), 100);\n        this.props.updateDisplay(this.props.clipId.replace(/-/g, \" \"));\n    }\n    render() {\n        return (\n            <div id={this.props.clipId} \n                onClick={this.playSound}\n                className=\"drum-pad\"\n                style={this.state.padStyle}\n            >\n                <audio className=\"clip\"\n                    src={ this.props.clip }\n                    id={this.props.keyTrigger}\n                ></audio>\n                {this.props.keyTrigger}\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}